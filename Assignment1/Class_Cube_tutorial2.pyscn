# -*- coding: utf-8 -*-

from stlib3.scene import MainHeader, ContactHeader
from stlib3.physics.rigid import Floor
from stlib3.physics.rigid import Cube
from stlib3.physics.rigid import Sphere
import numpy as np

exportCSV = True

def createScene(rootNode):
    """This is my first scene"""

    pluginList = ["Sofa.Component.AnimationLoop",
                  "Sofa.Component.Collision.Detection.Algorithm",
                  "Sofa.Component.Collision.Detection.Intersection",
                  "Sofa.Component.Collision.Geometry",
                  "Sofa.Component.Collision.Response.Contact",
                  "Sofa.Component.Constraint.Lagrangian.Solver",
                  "Sofa.Component.IO.Mesh",
                  "Sofa.Component.LinearSolver.Iterative",
                  "Sofa.Component.Mass",
                  "Sofa.Component.ODESolver.Backward",
                  "Sofa.Component.StateContainer",
                  "Sofa.Component.Topology.Container.Constant",
                  "Sofa.Component.Visual",
                  "Sofa.GL.Component.Rendering3D","Sofa.Component.Mapping.NonLinear", 'Sofa.Component.Constraint.Lagrangian.Correction']




    MainHeader(rootNode, gravity=[0.0, -981.0, 0.0], plugins=pluginList)
    ContactHeader(rootNode, alarmDistance=15, contactDistance=10)

    Floor(rootNode,
          translation=[0.0, -160.0, 0.0],
          isAStaticObject=True)

    cube = Cube(rootNode, translation=[0.0, 0.0, 0.0],
                uniformScale=20.0, color=[0,0,1,1])
    
    cube.addObject('UncoupledConstraintCorrection')
    sphere=Sphere(rootNode, translation=[-40.0,50.0,0.0],uniformScale=20.0, color=[1,0,1,1])
    sphere.addObject('UncoupledConstraintCorrection')
    #print(rootNode.Sphere.mstate.position.value)
    
    if exportCSV:
     np.savetxt('positions.csv', rootNode.Cube.mstate.position.value, delimiter=',')
    return rootNode
